// automatically generated by the FlatBuffers compiler, do not modify

package com.bryan.rpc.common.model.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FbsRpcRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static FbsRpcRequest getRootAsFbsRpcRequest(ByteBuffer _bb) { return getRootAsFbsRpcRequest(_bb, new FbsRpcRequest()); }
  public static FbsRpcRequest getRootAsFbsRpcRequest(ByteBuffer _bb, FbsRpcRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FbsRpcRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String className() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer classNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String methodName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer methodNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer methodNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public com.bryan.rpc.common.model.fbs.FbsDynamicParam params(int j) { return params(new com.bryan.rpc.common.model.fbs.FbsDynamicParam(), j); }
  public com.bryan.rpc.common.model.fbs.FbsDynamicParam params(com.bryan.rpc.common.model.fbs.FbsDynamicParam obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int paramsLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public com.bryan.rpc.common.model.fbs.FbsDynamicParam.Vector paramsVector() { return paramsVector(new com.bryan.rpc.common.model.fbs.FbsDynamicParam.Vector()); }
  public com.bryan.rpc.common.model.fbs.FbsDynamicParam.Vector paramsVector(com.bryan.rpc.common.model.fbs.FbsDynamicParam.Vector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public String requestId() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer requestIdAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer requestIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String serviceName() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer serviceNameAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer serviceNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createFbsRpcRequest(FlatBufferBuilder builder,
      int classNameOffset,
      int methodNameOffset,
      int paramsOffset,
      int requestIdOffset,
      int serviceNameOffset) {
    builder.startTable(5);
    FbsRpcRequest.addServiceName(builder, serviceNameOffset);
    FbsRpcRequest.addRequestId(builder, requestIdOffset);
    FbsRpcRequest.addParams(builder, paramsOffset);
    FbsRpcRequest.addMethodName(builder, methodNameOffset);
    FbsRpcRequest.addClassName(builder, classNameOffset);
    return FbsRpcRequest.endFbsRpcRequest(builder);
  }

  public static void startFbsRpcRequest(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addClassName(FlatBufferBuilder builder, int classNameOffset) { builder.addOffset(0, classNameOffset, 0); }
  public static void addMethodName(FlatBufferBuilder builder, int methodNameOffset) { builder.addOffset(1, methodNameOffset, 0); }
  public static void addParams(FlatBufferBuilder builder, int paramsOffset) { builder.addOffset(2, paramsOffset, 0); }
  public static int createParamsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startParamsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addRequestId(FlatBufferBuilder builder, int requestIdOffset) { builder.addOffset(3, requestIdOffset, 0); }
  public static void addServiceName(FlatBufferBuilder builder, int serviceNameOffset) { builder.addOffset(4, serviceNameOffset, 0); }
  public static int endFbsRpcRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FbsRpcRequest get(int j) { return get(new FbsRpcRequest(), j); }
    public FbsRpcRequest get(FbsRpcRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

